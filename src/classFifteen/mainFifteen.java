package classFifteen;

public class mainFifteen {
    
}
/*
01. 람다식에 대한 설명으로 틀린 것은 무엇입니까? 4

① 람다식은 함수적 인터페이스의 익명 구현 객체를 생성한다.

② 매개 변수가 없을 경우 ( ) -> { ... } 형태로 작성한다.

③ (x , y) -> { return x+y; }는 (x , y) -> x+y로 바꿀 수 있다.

④ @FunctionalInterface가 기술된 인터페이스만 람다식으로 표현이 가능하다.


02. 메소드 참조에 대한 설명으로 틀린 것은? 4

① 메소드 참조는 함수적 인터페이스의 익명 구현 객체를 생성한다.

② 인스턴스 메소드는 "참조변수::메소드"로 기술한다.

③ 정적 메소드는 "클래스::메소드"로 기술한다.

④ 생성자 참조인 "클래스::new"는 매개 변수가 없는 디폴트 생성자만 호출한다.

03. 잘못 작성된 람다식은 무엇입니까? 2

① a -> a+3

② a, b -> a*b

③ x -> System.out.println(x/5)

④ (x , y) -> Math.max(x, y)

 int min = maxOrMin((a,b) -> (a<b)?a:b);


 */